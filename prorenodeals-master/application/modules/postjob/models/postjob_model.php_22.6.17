<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Postjob_model extends BaseModel {

    public function __construct() {
		$this->load->model('notification/notification_model');
        return parent::__construct();
		
    }

   public function post_project() {
	$this->load->helper('date');
	 $this->load->library('MY_Validation');
	
     /*$this->load->helper('recaptcha');	*/
		
		$i=0;
		if(!$this->session->userdata('user'))
		{
		$inf_type=$this->input->post('user_inf'); 
		if($inf_type=='s')
		{
		$fname=$this->input->post('fname');
		$lname=$this->input->post('lname');
		$regusername=$this->input->post('regusername');
		$email=$this->input->post('email');
		$cnfemail=$this->input->post('cnfemail');
		$regpassword=$this->input->post('regpassword');
		$cpassword=$this->input->post('cpassword');
		$country=$this->input->post('country');
                
        $city=$this->input->post('city');
		}
		elseif($inf_type=='l')
		{
			$lusername=$this->input->post('lusername');

			$lpassword=$this->input->post('lpassword');	
		}
		}
		$captcha=trim(strtolower($this->input->post('captcha'))); 
        $subskill="";
        if($this->input->post('subskill')!=""){ 
          $subskill=implode(",", $this->input->post('subskill'));  
        }
        $subskillarr=$this->input->post('subskill');
              
       // $subskill= rtrim($subskill,",");  
        
       $ball="";
        $project_type=$this->input->post('project_type');
        $ball=$this->input->post('budgetall');
        $bmin=0;
        $bmax=0;
		$fixed_budeget=$this->input->post('fixed_budeget');
		  if($ball=='other'){	
		  	$fixed_budget='Y';
		  }else{
		  	$fixed_budget='N';
		  }
		
        if($ball!="0" && $project_type=="F"){             
        if($ball=='other'){			
			$bmin=$this->input->post('fixed_budeget');
            $bmax=$this->input->post('fixed_budeget');
			
		}else{
			$b=explode("#",$this->input->post('budgetall'));
            $bmin=$b[0];
            $bmax=$b[1];
		}
            
        }
        else{ 
        	
            $bmin=$this->input->post('budget_min');
            $bmax=$this->input->post('budget_max');
        }        
        if($project_type=='H'){
			$multi_freelancer='Y';
			$no_of_freelancer=$this->input->post('no_of_freelancer');
		}else{
			$multi_freelancer='N';
			$no_of_freelancer='0';
		}
		$title=$this->input->post('title');
		$description=$this->input->post('description');
         $category=$this->input->post('category_id');
         
                
		$subcategory=$this->input->post('subcategory_id');
		//$subskill=$subskill;
		$project_type=$this->input->post('project_type');
		//$budget_min=$this->input->post('budget_min');
        //$budget_max=$this->input->post('budget_max');
        
	if(!$this->session->userdata('user'))
		{	
		if($inf_type=='s')
		{
			if($fname==''){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='fname';
				$msg['errors'][$i]['message']="Please enter first name";
				$i++;
			}
			if($lname==''){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='lname';
				$msg['errors'][$i]['message']="Please enter last name";
				$i++;
			}
			if($regusername=='' || strlen($regusername)<4 || strlen($regusername)>20 || !preg_match('/^[a-zA-Z0-9]+$/',$regusername)){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='regusername';
				$msg['errors'][$i]['message']="Username must be 4 to 20 characters, only letters and/or numbers";
				$i++;
			}else{
				$this->db->where("username",$regusername);
				$un=$this->db->count_all_results('user');
				if($un>0){
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='regusername';
					$msg['errors'][$i]['message']='The username you are trying to use already exists please try again';
					$i++;
				}
			}
			if($email=='' || !filter_var($email, FILTER_VALIDATE_EMAIL)){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='email';
				$msg['errors'][$i]['message']="Please type email address";
				$i++;
			}elseif($cnfemail=='' || $cnfemail!=$email){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='cnfemail';
				$msg['errors'][$i]['message']="Confirm email not match";
				$i++;
			}else{
				$this->db->where("email",$email);
				$em=$this->db->count_all_results('user');
				if($em>0){
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='email';
					$msg['errors'][$i]['message']= "This email is already in use. Please enter a different one";
					$i++;
				}
			}
			if($regpassword=='' || strlen($regpassword)<6 || strlen($regpassword)>12 || !preg_match('/^[a-zA-Z0-9]+$/',$regpassword)){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='regpassword';
				$msg['errors'][$i]['message']="Your password must be at least 6 characters and no longer than 12. Password can only contain numbers or letters or both - all other symbols are invalid";
				$i++;
			}elseif($cpassword=='' || $regpassword!=$cpassword){
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='cpassword';
				$msg['errors'][$i]['message']="Confirm password not match";
				$i++;
			}
			if($country==""){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='country';
			$msg['errors'][$i]['message']="Select Your Country";
			$i++;                    
             }
		if($city==""){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='city';
			$msg['errors'][$i]['message']="Select Your city";
			$i++;                    
             }
		}
		elseif($inf_type=='l')
		{
			
			if($lusername==''){

			$msg['status']='FAIL';

			$msg['errors'][$i]['id']='lusername';

			$msg['errors'][$i]['message']="Enter username or email";

			$i++;

			}

		

			if($lpassword==''){
	
				$msg['status']='FAIL';
	
				$msg['errors'][$i]['id']='lpassword';
	
				$msg['errors'][$i]['message']="Enter password";
	
				$i++;
	
			}
		}
		}
		if($title==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='title';
			$msg['errors'][$i]['message']="Please Enter Job Title";
			$i++;
		}
		if($description==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='description';
			$msg['errors'][$i]['message']="Please Enter Description";
			$i++;
		}
                if($category==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='category_id';
			$msg['errors'][$i]['message']="Please Select Category";
			$i++;
		}                
		
            if($subcategory==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='subcategory_id';
			$msg['errors'][$i]['message']="Please Select Sub Category";
			$i++;
		}   
                
                if($subskill==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='subskill_id';
			$msg['errors'][$i]['message']="Please Select Sub Skill";
			$i++;
		}
                
                if($project_type==''){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='project_type';
			$msg['errors'][$i]['message']="Please Select Project Type";
			$i++;
                }
                
                if($project_type=='F')
                {
                    if($ball=="0"){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetall';
			$msg['errors'][$i]['message']="Please Select your Budget";
			$i++;                    
           		}elseif($ball=="other" && ($fixed_budeget=="0" || !preg_match("/^-?[0-9]+(?:\.[0-9]{1,2})?$/", $fixed_budeget))){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetall';
			$msg['errors'][$i]['message']="Please eneter valid amount";
			$i++;
				}        
        	}
		elseif($project_type=='H'){    
                    
            if($bmax=="0" && $bmin=="0"){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetmax';
			$msg['errors'][$i]['message']="Please Select/Enter your Budget";
			$i++; 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetmin';
			$msg['errors'][$i]['message']="Please Select/Enter your Budget";
			$i++;                    
              }else{
				  if($bmax<3){
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='budgetmax';
					$msg['errors'][$i]['message']="Minimum Budget $3";
					$i++; 
				  }
				  if($bmin<3) {
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='budgetmin';
					$msg['errors'][$i]['message']="Minimum Budget $3";
					$i++; 
				  }
			  }  
              if($multi_freelancer=='Y'){
				  if(($no_of_freelancer<1) || (!preg_match('/^[0-9]*$/', $no_of_freelancer))){
				  	$msg['status']='FAIL';
					$msg['errors'][$i]['id']='no_of_freelancer';
					$msg['errors'][$i]['message']="Enter your Valid number";
					$i++;                    
				  }
			  }     
          }
          	if($this->input->post('termsandcondition')!='Y'){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='termsandcondition';
			$msg['errors'][$i]['message']="Please check terms and conditions";
			$i++;
		}
		 /*  if (!$this->my_validation->recaptcha_matches()) {
        	$msg['status']='FAIL';
			$msg['errors'][$i]['id']='captcha';
			$msg['errors'][$i]['message']="Captcha is invalid";
			$i++;
    	  }
		 if ($i>0) {
        	$msg['status']='FAIL';
			$msg['errors'][$i]['id']='captcha';
			$msg['errors'][$i]['message']="Please click on the Recaptcha refresh button to display a new code";
			$i++;
    	  }	*/	  
                
            if($i==0){
			if(!$this->session->userdata('user'))
			{
				if($inf_type=='s')
				{	
					$new_data = array(
					'username' => $this->input->post('regusername'),
					'fname' => $this->input->post('fname'),
					'lname' => $this->input->post('lname'),
					'password' => md5($this->input->post('regpassword')),
					'email' => $this->input->post('email'),
					'country' => $this->input->post('country'),
            		'city' => $this->input->post('city'),
					'v_stat' => 'Y',
					'status' => 'Y',
					'membership_plan' => '1',
					'membership_start' => date("Y-m-d"),                           
					'ip'=>$_SERVER['REMOTE_ADDR']
					);
					$this->db->set('reg_date', 'NOW()', FALSE);
					$this->db->set('edit_date', 'NOW()', FALSE);
					$this->db->set('ldate', 'NOW()', FALSE);
					parent::insert("user", $new_data);
					if ($this->db->insert('user', $new_data)) 
					{
					
					$user_id=$this->db->insert_id();
					$url=SITE_URL."/login/".base64_encode($user_id);
					if(EMAIL_VERI=='Y')
					{
						$link=$url;
					}else
					{
						$link=SITE_URL."/login/";
					}
					$from=ADMIN_EMAIL;
					$to=$email;
					$template='registration';
					$data_parse=array('USER'=>$regusername,
										'F_NAME'=>$fname,
										'L_NAME'=>$lname,
										'EMAIL'=>$email,
										'PASSWORD'=>$regpassword,
										'URL'=>$link
										);
							$msg['status']='OK';
							$this->auto_model->send_email($from,$to,$template,$data_parse);
						/*
						User login here
						*/
						$username = trim($this->input->post("regusername"));
			
						$password = $this->input->post("regpassword");
			
						$response = array();
			
						$this->db->select('user_id, username, email,ldate,membership_plan,membership_end,membership_upgrade,acc_balance');
			
						$this->db->where("(email = '".$username."' OR username = '".$username."')"); 
			
						$this->db->where('password',md5($password));
			
						$this->db->where('status =', 'Y');
			
						$this->db->where('v_stat =', 'Y');
			
						$query=$this->db->get('user');
			
			
			
						//echo $this->db->last_query();die();
			
						$result = $query->result();
			
									
			
						if ($query->num_rows() == 1) {
										
							$msg['status'] = "OK";
			
							$this->session->set_userdata('user', $result);
			
							$data = array(
			
							   'ip' => $_SERVER['REMOTE_ADDR']
			
							);
			
							$this->db->set('ldate', 'NOW()', FALSE);
			
							$this->db->update('user', $data);
			
						   
			
						}
							
					}
				}
				elseif($inf_type=='l')
				{
					

						$username = trim($this->input->post("lusername"));
			
						$password = $this->input->post("lpassword");
			
						$response = array();
			
						$this->db->select('user_id, username, email,ldate,membership_plan,membership_end,membership_upgrade,acc_balance');
			
						$this->db->where("(email = '".$username."' OR username = '".$username."')"); 
			
						$this->db->where('password',md5($password));
			
						$this->db->where('status =', 'Y');
			
						$this->db->where('v_stat =', 'Y');
			
						$query=$this->db->get('user');
			
			
			
						$result = $query->result();
									
			
						if ($query->num_rows() == 1) {
										
							$msg['status'] = "OK";
			
							$this->session->set_userdata('user', $result);
							
							$user_id=$result[0]->user_id;
							
							$data = array(
			
							   'ip' => $_SERVER['REMOTE_ADDR']
			
							);
			
							$this->db->set('ldate', 'NOW()', FALSE);
			
							$this->db->update('user', $data);
			
						   
			
						} else {
			
							$msg['status']='FAIL';
			
							$msg['errors'][$i]['id']='agree_terms';
			
							$msg['errors'][$i]['message']= 'Login failed! wrong username/email or password or your profile is not activated yet';
			
						}

       	

			
				}
			}
			if($this->input->post('user_id'))
			{
				$user_id=$this->input->post('user_id');
			}
			$featured="N";
			if($this->session->userdata('user'))
			{
				$user=$this->session->userdata('user');
				/***** Plan wise project limit calculation Start ****/
				$project_plan_limit=$this->auto_model->getFeild('project','membership_plan','id',$user[0]->membership_plan);
				if($user[0]->membership_plan!='1')
				{
					$membership_start=$this->auto_model->getFeild('membership_start','user','user_id',$user[0]->user_id);
					$membership_end=$this->auto_model->getFeild('membership_end','user','user_id',$user[0]->user_id);
					$project_count=$this->projectCount($user[0]->user_id,$membership_start,$membership_end);
				}
				else
				{
					$project_count=$this->projectCount($user[0]->user_id,'','');
				}
				/***** Plan wise project limit calculation End ****/
				/***** Featured Job Balance Calculation Start ****/
		   		$user=$this->session->userdata('user');
				if($this->input->post('featured')=="Y"){ 
				
			  	$balance=$this->auto_model->getFeild('acc_balance','user','user_id',$user[0]->user_id);
                                
				if(($this->input->post('project_type')=="F" && $balance<FIXED_RATE) || ($this->input->post('project_type')=="H" && $balance<HOURLY_RATE))
				{
					$msg['location']=VPATH.'myfinance/';	
				}
			  
			  	else if($this->input->post('project_type')=="F" && $balance>=FIXED_RATE){ 
				 
						$data_transaction=array(
						"user_id" =>$this->input->post('user_id'),
						"amount" =>FIXED_RATE,
						"profit" =>FIXED_RATE,
						"transction_type" =>"DR",
						"transaction_for" => "Featured project",
						"transction_date" => date("Y-m-d H:i:s"),
						"status" => "Y"
					);
					
					$data_user=array(    
						"acc_balance"=>($balance - FIXED_RATE)
					);
					
					if($this->insertTransaction($data_transaction)){ 
						$this->updateUser($data_user,$this->input->post('user_id'));
						 $featured="Y";
					}				
			  }
			  else if($this->input->post('project_type')=="H" && $balance>=HOURLY_RATE){ 
			  
						$data_transaction=array(
						"user_id" =>$this->input->post('user_id'),
						"amount" =>HOURLY_RATE,
						"profit" =>HOURLY_RATE,
						"transction_type" =>"DR",
						"transaction_for" => "Featured project",
						"transction_date" => date("Y-m-d H:i:s"),
						"status" => "Y"
					);
					
					$data_user=array(    
						"acc_balance"=>($balance - HOURLY_RATE)
					);
					
					if($this->insertTransaction($data_transaction)){ 
						$this->updateUser($data_user,$this->input->post('user_id'));
						 $featured="Y";
					}				  
			  
			  }
			} 
	
	
	
		   /***** Featured Job Balance Calculation End ****/	
			}
			elseif(!$this->session->userdata('user'))
			{
				//echo "pritam2";die();
				if($this->input->post('featured')=="Y"){
				
					$msg['location']=VPATH.'myfinance/';
				}
			}
			 //echo $bmin."#".$bmax; die(); 
			 if($project_count < $project_plan_limit)
			 {  
				$p_id_public = time();
			$data = array(
                            'project_id' => $p_id_public,
                            'title' => $this->input->post('title'),
                            'description' => $this->input->post('description'),
                            'category' => $this->input->post('category_id'),
                            'sub_category' => $this->input->post('subcategory_id'),
		 	    			'environment' => $this->input->post('environment'),
                            'project_type' => $this->input->post('project_type'),
                            'visibility_mode' => $this->input->post('visibility'),
                            'buget_min' => $bmin,
                            'buget_max' => $bmax, 
                            'multi_freelancer' => $multi_freelancer,
                            'no_of_freelancer' => $no_of_freelancer,
                            'fixed_budget' => $fixed_budget,
                            //'skills' => $subskill,
                            'user_city'=>$this->auto_model->getFeild("city","user","user_id",$user_id),
                            'user_country'=>$this->auto_model->getFeild("country","user","user_id",$user_id),
                            'attachment' => ltrim($this->input->post('upload_file'),","),
                            'featured' =>  $featured,
                            'post_date' => date("Y-m-d"),
                            'post_time' => date("Y-m-d H:i:s"),
                            'expiry_date' => date("Y-m-d",  strtotime('+'.JOB_EXPIRATION.' day', strtotime(date("Y-m-d")))),    
                            'user_id' => $user_id,    
                            'status'=>'O',
							'project_status'=>'Y'
			);
			parent::insert("projects", $data);
                        $this->db->insert('projects', $data);
                        $pid=$this->db->insert_id();
					$freelancers = $this->input->post('freelancer');
					$p_name = getField('title','projects','id',$pid);
					if(!empty($freelancers) AND count($freelancers) > 0){
						foreach($freelancers as $v){
							$notification = 'You are invite for the project :'.$p_name;
							$link = 'jobdetails/details/'.$p_id_public;
							$this->notification_model->log($user_id, $v, $notification, $link);
							
							$freelancer_fname = $this->auto_model->getFeild('fname' , 'user' , 'user_id' , $v);
							$inv = array(
								'employer_id' => $user_id,
								'freelancer_id' => $v,
								'project_id' => $p_id_public,
								'project_type' => $this->input->post('project_type'),
								'invitation_amount' => $bmin,
								'message' => "Hi $freelancer_fname, I noticed your profile and would like to offer you my project. We can discuss any details over chat.",
								'date' => date('Y-m-d'),
							
							);
							$this->db->insert('new_inviteproject', $inv);
							
							/* send mail here */
						}
					}
			if ($pid) {
						if(count($subskillarr) > 0){
							$project_id = $this->auto_model->getFeild('project_id' , 'projects' , 'id' , $pid);
							foreach($subskillarr as $k => $v){
								$this->db->insert('project_skill' , array('project_id' => $project_id , 'skill_id' => $v));
							}
						}
                        $from=ADMIN_EMAIL;
						$to=ADMIN_EMAIL;
						$template='new_job_post';
						$data_parse=array('title'=>$this->input->post('title')
											);
					//	$this->auto_model->send_email($from,$to,$template,$data_parse);   
                        $project_id=  $this->auto_model->getFeild("project_id","projects","id",$pid);
                         $msg['status']='OK';    
			$msg['message']="<h3 class='postjob-alert-title'><span style='margin-right:10px'><i class='fa fa-check'></i></span>Job Post Success.</h3>
			<p> What would you like to do next?</p> <ul class='alert-choice'><li><a href='".VPATH."jobdetails/details/".$project_id."'>Preview your job </a></li> <li><a  href='".VPATH."postjob/editjob/".$pid."'> Edit your job </a> </li>";

                        
                         if($this->session->userdata('user')){ 
                             
				$project_plan_limit=$this->auto_model->getFeild('project','membership_plan','id',$user[0]->membership_plan);
				if($user[0]->membership_plan!='1'){
					$membership_start=$this->auto_model->getFeild('membership_start','user','user_id',$user[0]->user_id);
					$membership_end=$this->auto_model->getFeild('membership_end','user','user_id',$user[0]->user_id);
					$project_count=$this->projectCount($user[0]->user_id,$membership_start,$membership_end);
				}
				else{
					$project_count=$this->projectCount($user[0]->user_id,'','');
				}
                             
                             if($project_count < $project_plan_limit){
                                 $msg['message'].="<li><a href='".VPATH."postjob/'> Post another job </a></li>";
                             }
							 else
							 {
								
								$from=ADMIN_EMAIL;
								
									$to=$this->auto_model->getFeild('email','user','user_id',$user[0]->user_id);
									$fname=$this->auto_model->getFeild('fname','user','user_id',$user[0]->user_id);
									$lname=$this->auto_model->getFeild('lname','user','user_id',$user[0]->user_id);
									$template='job_post_limit_notification';
									$data_parse=array('name'=>$fname." ".$lname
														);
									//$this->auto_model->send_email($from,$to,$template,$data_parse);	
									 
							}                             
                         } 
                        
                        
                        $msg['message'].="<li><a href='".VPATH."dashboard/profile_professional'> Visit your profile page </a></li></ul>";
                        
			
			
			} else {
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='agree_terms';
				$msg['errors'][$i]['message']= 'dB error!';
			}
			}
			else
			{
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='limit_terms';
				$msg['errors'][$i]['message']= 'You have exceeded the post project limit. Please upgrade your membership plan now to post more project.';	
			}
		}
            unset($_POST);
            echo json_encode($msg);
	}

   public function updatepost_project() {
       
	$this->load->helper('date');
        $subskill="";
        if($this->input->post('subskill')!=""){ 
          $subskill=implode(",", $this->input->post('subskill'));  
        }
        $subskillarr = $this->input->post('subskill');
              
       // $subskill= rtrim($subskill,",");  
        
       
        $project_type=$this->input->post('project_type');
        $ball=$this->input->post('budgetall');
        $fixed_budeget=$this->input->post('fixed_budeget');
		  if($ball=='other'){	
		  	$fixed_budget='Y';
		  }else{
		  	$fixed_budget='N';
		  }
        $bmin=0;
        $bmax=0;
        if($ball!="" && $project_type=="F"){ 
        
        if($ball=='other'){			
			$bmin=$this->input->post('fixed_budeget');
            $bmax=$this->input->post('fixed_budeget');
			
		}else{
			$b=  explode("#",$this->input->post('budgetall'));
            $bmin=$b[0];
            $bmax=$b[1];
		}
           
            
            
            
        }
        else{ 
            $bmin=$this->input->post('budget_min');
            $bmax=$this->input->post('budget_max');
        } 
        if($project_type=='H' && $this->input->post('multi_freelancer')=='Y'){
			$multi_freelancer=$this->input->post('multi_freelancer');
			$no_of_freelancer=$this->input->post('no_of_freelancer');
		}else{
			$multi_freelancer='N';
			$no_of_freelancer='0';
		}       
        
		$i=0;
		$title=$this->input->post('title');
		$description=$this->input->post('description');
         $category=$this->input->post('category_id');
         
                
		$subcategory=$this->input->post('subcategory_id');
		//$subskill=$subskill;
		$project_type=$this->input->post('project_type');
		//$budget_min=$this->input->post('budget_min');
                //$budget_max=$this->input->post('budget_max');
                
		if($title==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='title';
			$msg['errors'][$i]['message']="Please Enter Job Title";
			$i++;
		}
		if($description==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='description';
			$msg['errors'][$i]['message']="Please Enter Description";
			$i++;
		}
                if($category==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='category_id';
			$msg['errors'][$i]['message']="Please Select Category";
			$i++;
		}                
		
                if($subcategory==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='subcategory_id';
			$msg['errors'][$i]['message']="Please Select Sub Category";
			$i++;
		}   
                
                if($subskill==''){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='subskill_id';
			$msg['errors'][$i]['message']="Please Select Skill";
			$i++;
		}
		
			if($project_type=='F')
			{
             	if($ball=="" || $ball=="0"){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetall';
			$msg['errors'][$i]['message']="Please Select your Budget";
			$i++;                    
           		}elseif($ball=="other" && ($fixed_budeget=="0" || !preg_match("/^-?[0-9]+(?:\.[0-9]{1,2})?$/", $fixed_budeget))){
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budgetall';
			$msg['errors'][$i]['message']="Please eneter valid amount";
			$i++;
				}          
        	}
			elseif($project_type=='H')
            {    
                
                if($bmax=="" && $bmin==""){ 
			$msg['status']='FAIL';
			$msg['errors'][$i]['id']='budget';
			$msg['errors'][$i]['message']="Please Select/Enter your Budget";
			$i++;                   
              }else{
				  if($bmax<3){
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='budget';
					$msg['errors'][$i]['message']="Minimum Budget $3";
					$i++; 
				  }
				  if($bmin<3) {
					$msg['status']='FAIL';
					$msg['errors'][$i]['id']='budget';
					$msg['errors'][$i]['message']="Minimum Budget $3";
					$i++; 
				  }
			  }   
               if($multi_freelancer=='Y'){
				  if($no_of_freelancer<1){
				  	$msg['status']='FAIL';
					$msg['errors'][$i]['id']='no_of_freelancer';
					$msg['errors'][$i]['message']="Enter your Valid number";
					$i++;                    
				  }
			  }     
          }
                
                if($i==0){
                    $input_data="";
                    
				/***** Featured Job Balance Calculation Start ****/
                            $featured="N";
		   		$featured=$this->auto_model->getFeild("featured","projects","id",$this->input->post("pid"));
                              if($featured=="N"){ 
                                   if($this->input->post('featured')=="Y"){ 
                                            $balance=$this->auto_model->getFeild('acc_balance','user','user_id',$this->input->post('user_id'));

                                            if($this->input->post('project_type')=="F" && $balance>=FIXED_RATE){ 

                                                            $data_transaction=array(
                                                            "user_id" =>$this->input->post('user_id'),
                                                            "amount" =>FIXED_RATE,
                                                            "profit" =>FIXED_RATE,
                                                            "transction_type" =>"DR",
                                                            "transaction_for" => "Featured project",
                                                            "transction_date" => date("Y-m-d H:i:s"),
                                                            "status" => "Y"
                                                    );

                                                    $data_user=array(    
                                                            "acc_balance"=>($balance - FIXED_RATE)
                                                    );

                                                    if($this->insertTransaction($data_transaction)){ 
                                                            $this->updateUser($data_user,$this->input->post('user_id'));
                                                             $featured="Y";
                                                    }				
                                      }
                                      else if($this->input->post('project_type')=="H" && $balance>=HOURLY_RATE){ 

                                                            $data_transaction=array(
                                                            "user_id" =>$this->input->post('user_id'),
                                                            "amount" =>HOURLY_RATE,
                                                            "profit" =>HOURLY_RATE,
                                                            "transction_type" =>"DR",
                                                            "transaction_for" => "Featured project",
                                                            "transction_date" => date("Y-m-d H:i:s"),
                                                            "status" => "Y"
                                                    );

                                                    $data_user=array(    
                                                            "acc_balance"=>($balance - HOURLY_RATE)
                                                    );

                                                    if($this->insertTransaction($data_transaction)){ 
                                                            $this->updateUser($data_user,$this->input->post('user_id'));
                                                             $featured="Y";
                                                    }				  

                                      }
                                    }                                   
                                  
                              }  
				
	
	
	
		   /***** Featured Job Balance Calculation End ****/	                    
                    
                    
                    
			$data = array(                            
                            'title' => $this->input->post('title'),
                            'description' => $this->input->post('description'),
                            'category' => $this->input->post('category_id'),
                            'sub_category' => $this->input->post('subcategory_id'),
							'environment' => $this->input->post('environment'),
                            'project_type' => $this->input->post('project_type'),
                            'visibility_mode' => $this->input->post('visibility'),
                            'buget_min' => $bmin,
                            'buget_max' => $bmax,
                            'multi_freelancer' => $multi_freelancer,
                            'no_of_freelancer' => $no_of_freelancer,
                            'fixed_budget' => $fixed_budget, 
                            //'skills' => $subskill,
                            'attachment' => ltrim($this->input->post('upload_file'),","),
                            'status' =>'O',
                            'featured' =>  $featured
			);
			//parent::insert("projects", $data);
                        $id=  $this->input->post("pid");
                        $this->db->where('id', $id);
                                                 
                        
			if ($this->db->update('projects', $data)){
							$project_id = $this->auto_model->getFeild('project_id' , 'projects' , 'id' , $id);
							$this->db->where('project_id', $project_id)->delete('project_skill');
							if(count($subskillarr) > 0){
								foreach($subskillarr as $k => $v){
									$this->db->insert('project_skill' , array('project_id' => $project_id , 'skill_id' => $v));
								}
							}
                            $msg['status']='OK';    
                            
                            $project_id=  $this->auto_model->getFeild("project_id","projects","id",$id);
							$link=VPATH."/jobdetails/details/".$project_id;
							$all_bidder=$this->getBidder($project_id);
							$from=ADMIN_EMAIL;
							foreach($all_bidder as $key=>$val)
							{
								$to=$this->auto_model->getFeild('email','user','user_id',$val['bidder_id']);
								$fname=$this->auto_model->getFeild('fname','user','user_id',$val['bidder_id']);
								$lname=$this->auto_model->getFeild('lname','user','user_id',$val['bidder_id']);
								$template='edit_job_notification';
								$data_parse=array('name'=>$fname." ".$lname,
													'title'=>$this->input->post('title'),
													'copy_url'=>$link,
													'url_link'=>$link
													);
								$this->auto_model->send_email($from,$to,$template,$data_parse);	
							}
                            
                            $msg['message']="<h4>Job Update Success.</h4><p>What would you like to do next?</p><div class='spacer-20'></div><ul class='alert_list'><li><a href='".VPATH."jobdetails/details/".$project_id."'>Preview your job</a></li><li><a href='".VPATH."postjob/editjob/".$id."'>Edit your job</a></li><li><a href='".VPATH."dashboard/profile_professional'>Visit your profile page</a></li></ul><div class='spacer-10'></div>";
			} else {
				$msg['status']='FAIL';
				$msg['errors'][$i]['id']='agree_terms';
				$msg['errors'][$i]['message']= 'dB error!';
			}
		}
		unset($_POST);
		echo json_encode($msg);
	}
        
        
        
    public function getpcatname($catname){ 
       return $catid=$this->auto_model->getFeild("parent_id","categories","cat_name",$catname);
    } 
    
    public function getpskillname($skillname){ 
       return $catid=$this->auto_model->getFeild("cat_id","skills","skill_name",$skillname);        
    }
	public function getProject($status='',$id='')
	  {
              
	  		$this->db->select("*");
            if($status=='')
			{
				$status='O';
			}                        
			
                        if($id!=""){ 
                            $this->db->where("id",$id);    
                        }
                        
                            $this->db->where("status",$status); 
                        
			$rs=$this->db->get('projects');
			//echo $Num=$rs->num_rows(); die;
			
			//echo $this->db->last_query();
			if( $rs->num_rows()=='0' ){
				
				
				$this->db->select("*");

			
                        if($id!=""){ 
                            $this->db->where("id",$id);    
                        }
                        
                            $this->db->where("status",'E'); 
                        
			$rs=$this->db->get('projects');
				
				
				
			}
			
			$data=array();
			foreach($rs->result() as $row)
			{
				$data[]=array(
				'id'=>$row->id,
				'project_id'=>$row->project_id,
				'title'=>$row->title,
                                'description'=>$row->description,
                                'category'=>$row->category,
                                'sub_category'=>$row->sub_category,
                                'skills'=>$row->skills, 
								'environment'=>$row->environment,    
                                'project_type'=>$row->project_type, 
                                'buget_min'=>$row->buget_min,
                                'buget_max'=>$row->buget_max,
                                'fixed_budget'=>$row->fixed_budget,
                                'featured'=>$row->featured,
                                'expiry_date'=>$row->expiry_date,
                                'attachment'=>$row->attachment,
                                'bidder_id'=>$row->bidder_id,
                                'user_id'=>$row->user_id,
                                'expiry_date_extend'=>$row->expiry_date_extend,
                                'multi_freelancer'=>$row->multi_freelancer,
                                'no_of_freelancer'=>$row->no_of_freelancer,
				'posted_date'=>$row->post_date				
				);
			}
			return $data;
	  }
	   public function insertTransaction($data){ 
              return $this->db->insert('transaction', $data);
          } 
          
          public function updateUser($data,$uid){ 
              $this->db->where('user_id', $uid);
              $this->db->update('user', $data); 
          } 
	  public function projectCount($user_id,$start='',$end='')
	  {
			$this->db->select('id');
			$this->db->where('user_id',$user_id);
			if($start!='' && $end!='')
			{
				$this->db->where("post_date BETWEEN ".$start." AND ".$end."");
			}
			$this->db->from('projects');
			return $this->db->count_all_results();
	 }
	 
	 public function getBidder($project_id='')
	 {
			$this->db->select('bidder_id');
			$this->db->where('project_id',$project_id);	
			$res=$this->db->get('bids');
			$data=array();
			foreach($res->result() as $row)
			{
				$data[]=array(
					'bidder_id'=>$row->bidder_id
				);	
			}
			return $data; 
	 }
	 
	 public function getcatskill($pid){         
        $this->db->select("id,skill_name");
        $con=array( 
           "cat_id" => $pid,
           "status" => "Y"
        );
        $this->db->order_by("skill_name");
        $res=$this->db->get_where("skills",$con);
        $data=array();
        
        foreach ($res->result() as $row){ 
            $data[]=array(
               "id" => $row->id,
               "skill_name" => $row->skill_name 
            );
        }
        
        return $data;
    }
	
	public function search_freelancer($term=''){
		$this->db->select('u.user_id,u.fname,u.lname,u.username,u.hourly_rate,u.logo')
			->from('user u')
			->where(array('account_type' => 'F', 'v_stat' => 'Y','status' => 'Y'))
			->like("CONCAT(u.fname, ' ',u.lname)", trim($term));
			
	
		$res = $this->db->order_by('u.fname', 'ASC')->get()->result_array();
		
		return $res;
	}
}